# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  REGISTRY_NAME: registry.gitlab.com
  REPO_NAME: flf2ko/goserver
  IMAGE_NAME: $REGISTRY_NAME/$REPO_NAME

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
    - test
    - build

format:
    stage: test
    script:
      - go fmt $(go list ./... | grep -v /vendor/)
      - go vet $(go list ./... | grep -v /vendor/)
      - go test -race $(go list ./... | grep -v /vendor/)

compile:
    stage: build
    script:
      - make build
    artifacts:
      paths:
        - bin/

build image:
     image: docker:stable
     services:
       - docker:dind
     only: 
       - master
     stage: build
     dependencies:
       - compile
     script: 
       - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_NAME/$REPO_NAME
       - docker build -t $REGISTRY_NAME/$REPO_NAME:$CI_COMMIT_REF_NAME .
       - docker push $REGISTRY_NAME/$REPO_NAME:$CI_COMMIT_REF_NAME
